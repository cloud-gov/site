---
import Markdown from "./Markdown.astro";
interface Button {
  label: string;
  url: string;
  variant?: string;
}

interface Props {
  heading?: string;
  intro?: string;
  content?: string;
  outro?: string;
  classes?: string;
  art?: string;
  id?: string;
  color?: string;
  align?: "center" | "left";
  buttons?: Button[];
}

const {
  heading = false,
  intro = false,
  outro = false,
  content = false,
  art = "",
  color = "white",
  align = "left",
  classes = "",
  buttons = [],
  id = false,
} = Astro.props;
---

<section
  {...id && { id }}
  class={`usa-section section section--${color} align-${align} ${art && art.length > 0 && `section-art section-art--${art} `}${classes}`}>
  <div class="section__container">
    <div class="section__intro">
      {heading && <h2 class="font-sans-xl margin-bottom-2">{heading}</h2>}

      {intro && <Markdown content={intro} classes="font-sans-lg line-height-sans-4 text-light" inline />}
    </div>

    {
      content && (
        <div class="section__content">
          <Markdown content={content} classes="section__markdown font-sans-md margin-top-0 margin-bottom-2" />
        </div>
      )
    }
    {
      Astro.slots.has("default") && (
        <div class="section__slot">
          <slot />
        </div>
      )
    }
    {
      outro && (
        <div class="section__outro">
          {art.length > 0 && <div class="top-divider" />}
          <Markdown
            content={outro}
            classes="margin-top-0 font-sans-lg line-height-sans-4 text-light margin-bottom-2"
            inline
          />
        </div>
      )
    }
    {
      buttons.length > 0 && (
        <div class="section__outro">
          {buttons.map((btn) => (
            <a href={btn.url} class={`usa-button${btn.variant ? ` usa-button--${btn.variant}` : ""}`}>
              {btn.label}
            </a>
          ))}
        </div>
      )
    }
  </div>
</section>
