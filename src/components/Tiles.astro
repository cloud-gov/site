---
import Markdown from "./Markdown.astro";
import PageSection from "./PageSection.astro";

interface Link {
  label: string;
  url: string;
}

interface Item {
  icon?: string;
  heading?: string;
  text?: string;
  link?: Link;
}

interface Props {
  heading?: string;
  intro?: string;
  outro?: string;
  items?: Item[];
  align?: "center" | "left";
  id?: string;
  color?: string;
}

const { items = [], align = "center", color = "base", ...props } = Astro.props;
---

<PageSection align={align} color={color} {...props}>
  <div class="tiles">
    {
      items.map((item) => (
        <div class="tile__item">
          <div
            class={`display-flex flex-column height-full padding-y-4 padding-x-3 radius-lg border color bg-white border-base-lighter text-${align}`}>
            {item.icon && (
              <span class="margin-bottom-1 display-block">
                <svg class="usa-icon usa-icon--size-5 accent" role="img" aria-hidden="true">
                  <use href={`${Astro.site}/assets/uswds/img/sprite.svg#${item.icon}`} />
                </svg>
              </span>
            )}

            {item.heading && <h3 class="accent font-body-lg margin-bottom-1 margin-top-2">{item.heading}</h3>}

            {item.text && (
              <Markdown
                content={item.text}
                classes="font-body-sm line-height-body-3 margin-top-05 margin-bottom-0"
                inline
              />
            )}

            {item.link && (
              <div
                class={`usa-button-group margin-top-2 margin-bottom-0 ${align === "center" ? "flex-justify-center" : ""}`}>
                <a class="usa-button usa-button--outline" href={item.link.url}>
                  {item.link.label}
                </a>
              </div>
            )}
          </div>
        </div>
      ))
    }
  </div>
</PageSection>
<style lang="scss">
  .tiles {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1.5rem;
  }

  .tile__item {
    -webkit-font-smoothing: initial;
    flex-basis: 100%;
    max-width: 100%;
    .border {
      border-color: var(--section-border, #fff);
    }
    .color {
      color: var(--section-card-text, #333);
    }
    .accent {
      color: var(--section-accent, #333);
      fill: var(--section-accent, #333);
    }
    @media (min-width: 640px) {
      max-width: 32em;
    }
    @media (min-width: 800px) {
      flex: 1 1 calc(33.333% - 1rem);
      max-width: calc(33.333% - 1rem);
    }
  }
</style>
