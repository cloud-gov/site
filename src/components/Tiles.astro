---
import { late } from "astro:schema";
import Markdown from "./Markdown.astro";
import PageSection from "./PageSection.astro";

interface Button {
  label: string;
  url: string;
}

interface Item {
  icon?: string;
  heading?: string;
  text?: string;
  link?: string;
  button?: Button;
}

interface Props {
  heading?: string;
  intro?: string;
  outro?: string;
  items?: Item[];
  align?: "center" | "left";
  id?: string;
  color?: string;
}

const { items = [], align = "center", color = "base", ...props } = Astro.props;

const tileLinkClasses = `tile__link usa-link--unstyled shadow-1 display-flex flex-column height-full padding-y-4 padding-x-3 radius-lg border color bg-white border-base-lighter text-${align}`;

const tileLogoClasses =
  "tile__link tile__link--has-logo usa-link--unstyled display-flex flex-column height-full padding-y-5 padding-x-3 radius-lg margin-y-2";

const tileClasses = `display-flex flex-column height-full padding-y-4 padding-x-3 radius-lg border color bg-white border-base-lighter text-${align}`;

let TileWrapper = "div";
let tileWrapperProps = { class: tileClasses, href: "" };
let tileIsLogo = false;
function formatTileWrapper(tileItem: Item) {
  // is Tile a link?
  if (tileItem.link) {
    TileWrapper = "a";
    tileWrapperProps.href = tileItem.link;
    tileWrapperProps.class = tileLinkClasses;
  }
  TileWrapper = tileItem.link ? "a" : "div";

  // is Tile a brand logo?
  if (tileItem.icon && tileItem.icon.startsWith("logo-cloud-")) {
    tileIsLogo = true;
    tileWrapperProps.class = `tile__link--has-${tileItem.icon} ${tileLogoClasses}`;
  }
}
---

<PageSection align={align} color={color} {...props}>
  <div class="tiles">
    {
      items.map((item) => {
        formatTileWrapper(item);

        return tileIsLogo ? (
          <div class="tile__item">
            <TileWrapper {...tileWrapperProps}>
              <span class={`tile__link__logo tile__link__${item.icon}`} aria-label={item.heading} />
            </TileWrapper>
          </div>
        ) : (
          <div class="tile__item">
            <TileWrapper {...tileWrapperProps}>
              {item.icon && (
                <span class="margin-bottom-1 display-block">
                  <svg class="usa-icon usa-icon--size-5 accent" role="img" aria-hidden="true">
                    <use href={`${Astro.site}/assets/uswds/img/sprite.svg#${item.icon}`} />
                  </svg>
                </span>
              )}

              {item.heading && <h3 class="accent font-body-lg margin-bottom-1 margin-top-2">{item.heading}</h3>}

              {item.text && (
                <Markdown
                  content={item.text}
                  classes="font-body-sm line-height-body-3 margin-top-05 margin-bottom-0"
                  inline
                />
              )}

              {item.button && (
                <div
                  class={`usa-button-group margin-top-2 margin-bottom-0 ${align === "center" ? "flex-justify-center" : ""}`}>
                  <a class="usa-button usa-button--outline" href={item.button.url}>
                    {item.button.label}
                  </a>
                </div>
              )}
            </TileWrapper>
          </div>
        );
      })
    }
  </div>
</PageSection>
<style lang="scss">
  .tiles {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1.5rem;
  }

  .tile__item {
    -webkit-font-smoothing: initial;
    flex-basis: 100%;
    max-width: 100%;
    .border {
      border-color: var(--section-border, #fff);
    }
    .color {
      color: var(--section-card-text, #333);
    }
    .accent {
      color: var(--section-accent, #333);
      fill: var(--section-accent, #333);
    }
    .tile__link {
      text-decoration: none;
      transition-property: border, box-shadow;
      border-color: var(--theme-color-primary);
      transition-duration: 150ms;
      &:hover {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);
      }
      &.border {
        border-color: var(--theme-color-primary-lightest);
        border-width: 2px;
        &:hover {
          border-color: var(--theme-color-primary-vivid);
        }
      }
      .color {
        color: var(--theme-color-primary, #333);
      }
      .accent {
        color: var(--theme-color-primary, #333);
        fill: var(--theme-color-primary, #333);
      }
    }
    @media (min-width: 640px) {
      max-width: 32em;
    }
    @media (min-width: 800px) {
      flex: 1 1 calc(33.333% - 1rem);
      max-width: calc(33.333% - 1rem);
    }
  }

  .tile__item .tile__link--has-logo {
    background-color: var(--theme-color-primary, #2672de);
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3);
    width: 100%;
    transition-property: background-color, box-shadow;
    transition-duration: 150ms;
    border: 1px solid var(--theme-color-cloud-hover, #2672de);
    &:hover {
      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.7);
    }
    &-cloud-apps,
    &-cloud {
      background-color: var(--theme-color-cloud, #2672de);
      &:hover {
        background-color: var(--theme-color-cloud-hover, #2672de);
      }
    }
    &-cloud-pages {
      border-color: var(--theme-color-pages-hover, #01a1b9);
      background-color: var(--theme-color-pages, #009ec1);
      &:hover {
        background-color: var(--theme-color-pages-hover, #01a1b9);
      }
    }
    &-cloud-workshop {
      border-color: var(--theme-color-workshop-hover, #de4b00);
      background-color: var(--theme-color-workshop, #ff580a);
      &:hover {
        background-color: var(--theme-color-workshop-hover, #de4b00);
      }
    }
  }
  .tile__link__logo {
    display: flex;
    background-image: url("../../public/assets/img/logo-cloud-gov-horizontal-reverse.svg");
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    flex: 1 1 3rem;
  }
  .tile__link__logo-cloud-apps {
    background-image: url("../assets/img/logo-cloud-apps-horizontal-reverse.svg");
  }

  .tile__link__logo-cloud {
    background-image: url("../assets/img/logo-cloud-gov-horizontal-reverse.svg");
  }
  .tile__link__logo-cloud-pages {
    background-image: url("../assets/img/logo-cloud-pages-horizontal-reverse.svg");
  }
  .tile__link__logo-cloud-workshop {
    background-image: url("../assets/img/logo-cloud-workshop-horizontal-reverse.svg");
  }
</style>
